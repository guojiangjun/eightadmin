<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.eight.dao.UserOperateTimeDao">

	<select id="get" resultType="com.bootdo.eight.domain.UserOperateTimeDO">
		select `logId`,`userId`,`addTime` from user_operate_time where logId = #{value}
	</select>

	<select id="list" resultType="com.bootdo.eight.domain.UserOperateTimeDO">
		select `logId`,`userId`,`addTime` from user_operate_time
        <where>  
		  		  <if test="logid != null and logid != ''"> and logId = #{logid} </if>
		  		  <if test="userid != null and userid != ''"> and userId = #{userid} </if>
		  		  <if test="addtime != null and addtime != ''"> and addTime = #{addtime} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by logId desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from user_operate_time
		 <where>  
		  		  <if test="logid != null and logid != ''"> and logId = #{logid} </if>
		  		  <if test="userid != null and userid != ''"> and userId = #{userid} </if>
		  		  <if test="addtime != null and addtime != ''"> and addTime = #{addtime} </if>
		  		</where>
	</select>
	<select id="userOftenOperate" resultType="java.util.Map">
		SELECT HOUR
			( addTime ) AS hour,
			count( * ) AS count,
			( SELECT addTime FROM user_operate_time WHERE userId = #{value} ORDER BY addTime DESC LIMIT 1 ) lastOperateTime
		FROM
			user_operate_time
		WHERE
			userId = #{value}
			AND addTime
		GROUP BY
			HOUR ( addTime )
		ORDER BY
			Count DESC limit 1;
	</select>

	<insert id="save" parameterType="com.bootdo.eight.domain.UserOperateTimeDO" useGeneratedKeys="true" keyProperty="logid">
		insert into user_operate_time
		(
			`userId`, 
			`addTime`
		)
		values
		(
			#{userid}, 
			#{addtime}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.eight.domain.UserOperateTimeDO">
		update user_operate_time 
		<set>
			<if test="userid != null">`userId` = #{userid}, </if>
			<if test="addtime != null">`addTime` = #{addtime}</if>
		</set>
		where logId = #{logid}
	</update>
	
	<delete id="remove">
		delete from user_operate_time where logId = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from user_operate_time where logId in 
		<foreach item="logid" collection="array" open="(" separator="," close=")">
			#{logid}
		</foreach>
	</delete>

</mapper>