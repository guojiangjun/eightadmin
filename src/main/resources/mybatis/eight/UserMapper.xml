<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.eight.dao.AppUserDao">

	<select id="get" resultType="com.bootdo.eight.domain.AppUserDO">
		select `userId`,`userName`,`password`,`token`,`registerTime`,`email` ,remark from user where userId = #{value}
	</select>

	<select id="list" resultType="com.bootdo.eight.domain.AppUserDO">
		select `userId`,`userName`,`password`,`token`,`registerTime`,`email`,remark from user
		<where>
			<if test="userid != null and userid != ''"> and userId = #{userid} </if>
			<if test="username != null and username != ''"> and userName = #{username} </if>
			<if test="password != null and password != ''"> and password = #{password} </if>
			<if test="token != null and token != ''"> and token = #{token} </if>
			<if test="registertime != null and registertime != ''"> and registerTime = #{registertime} </if>
			<if test="email != null and email != ''"> and email = #{email} </if>
			<if test="remark != null and remark != ''"> and remark = #{remark} </if>
		</where>
		<choose>
			<when test="sort != null and sort.trim() != ''">
				order by ${sort} ${order}
			</when>
			<otherwise>
				order by userId desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="count" resultType="int">
		select count(*) from user
		<where>
			<if test="userid != null and userid != ''"> and userId = #{userid} </if>
			<if test="username != null and username != ''"> and userName = #{username} </if>
			<if test="password != null and password != ''"> and password = #{password} </if>
			<if test="token != null and token != ''"> and token = #{token} </if>
			<if test="registertime != null and registertime != ''"> and registerTime = #{registertime} </if>
			<if test="email != null and email != ''"> and email = #{email} </if>
		</where>
	</select>

	<insert id="save" parameterType="com.bootdo.eight.domain.AppUserDO" useGeneratedKeys="true" keyProperty="userid">
		insert into user
		(
			`userName`,
			`password`,
			`token`,
			`registerTime`,
			`email`,
			remark
		)
		values
		(
			#{username},
			#{password},
			#{token},
			#{registertime},
			#{email},
			#{remark}
		)
	</insert>

	<update id="update" parameterType="com.bootdo.eight.domain.AppUserDO">
		update user
		<set>
			<if test="username != null">`userName` = #{username}, </if>
			<if test="password != null">`password` = #{password}, </if>
			<if test="token != null">`token` = #{token}, </if>
			<if test="registertime != null">`registerTime` = #{registertime}, </if>
			<if test="email != null">`email` = #{email}</if>
			<if test="remark != null">`remark` = #{remark}</if>
		</set>
		where userId = #{userid}
	</update>

	<delete id="remove">
		delete from user where userId = #{value}
	</delete>

	<delete id="batchRemove">
		delete from user where userId in
		<foreach item="userid" collection="array" open="(" separator="," close=")">
			#{userid}
		</foreach>
	</delete>

</mapper>